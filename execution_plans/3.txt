-> Sort: scored.total_score DESC  (actual time=3325..3326 rows=9367 loops=1)
    -> Stream results  (cost=1.88e+6 rows=14.8e+6) (actual time=3296..3318 rows=9367 loops=1)
        -> Nested loop inner join  (cost=1.88e+6 rows=14.8e+6) (actual time=3296..3315 rows=9367 loops=1)
            -> Filter: (a.anime_id is not null)  (cost=1199 rows=11747) (actual time=0.0346..8.29 rows=12022 loops=1)
                -> Covering index scan on a using basic_anime  (cost=1199 rows=11747) (actual time=0.0341..7.61 rows=12022 loops=1)
            -> Index lookup on scored using <auto_key0> (anime_id=a.anime_id)  (cost=647944..647978 rows=135) (actual time=0.275..0.275 rows=0.779 loops=12022)
                -> Materialize CTE scored  (cost=647944..647944 rows=1261) (actual time=3296..3296 rows=9593 loops=1)
                    -> Group aggregate: sum(rate.rating)  (cost=647818 rows=1261) (actual time=10.3..3288 rows=9593 loops=1)
                        -> Filter: (rate.rating > 0)  (cost=488831 rows=1.59e+6) (actual time=1.12..2965 rows=4.1e+6 loops=1)
                            -> Covering index scan on rate using basic_scored_anime_id  (cost=488831 rows=4.77e+6) (actual time=0.0078..2637 rows=5.06e+6 loops=1)
