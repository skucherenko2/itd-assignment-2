-> Sort: s.total DESC  (actual time=4464..4465 rows=9367 loops=1)
    -> Stream results  (cost=323148 rows=0) (actual time=4426..4458 rows=9367 loops=1)
        -> Nested loop inner join  (cost=323148 rows=0) (actual time=4426..4456 rows=9367 loops=1)
            -> Filter: (a.anime_id is not null)  (cost=1199 rows=11747) (actual time=0.0285..20 rows=12022 loops=1)
                -> Table scan on a  (cost=1199 rows=11747) (actual time=0.0279..19.5 rows=12022 loops=1)
            -> Index lookup on s using <auto_key0> (anime_id=a.anime_id)  (cost=0.25..27.4 rows=110) (actual time=0.369..0.369 rows=0.779 loops=12022)
                -> Materialize  (cost=0..0 rows=0) (actual time=4425..4425 rows=9593 loops=1)
                    -> Table scan on <temporary>  (actual time=4422..4422 rows=9593 loops=1)
                        -> Aggregate using temporary table  (actual time=4422..4422 rows=9593 loops=1)
                            -> Filter: ((rate.rating <> <cache>(-(1))) and (rate.rating > 0) and (rate.rating is not null))  (cost=488831 rows=1.29e+6) (actual time=1.39..2869 rows=4.1e+6 loops=1)
                                -> Table scan on rate  (cost=488831 rows=4.77e+6) (actual time=1.36..2475 rows=5.06e+6 loops=1)
